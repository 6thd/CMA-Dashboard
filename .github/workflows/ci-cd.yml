name: CI/CD Pipeline

on:
  push:
    branches: [ master, develop ]
  pull_request:
    branches: [ master, develop ]

jobs:
  frontend:
    name: Frontend Build and Test
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '20'
        cache: 'npm'
        cache-dependency-path: CMA.Web/ClientApp/package-lock.json
    
    - name: Install dependencies
      working-directory: CMA.Web/ClientApp
      run: npm ci
    
    - name: Run linter
      working-directory: CMA.Web/ClientApp
      run: npm run lint
    
    - name: Check formatting
      working-directory: CMA.Web/ClientApp
      run: npm run format:check
    
    - name: Type check
      working-directory: CMA.Web/ClientApp
      run: npm run type-check
    
    - name: Build
      working-directory: CMA.Web/ClientApp
      run: npm run build

  backend:
    name: Backend Build and Test
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '8.0.x'
    
    - name: Restore dependencies
      run: dotnet restore
    
    - name: Build
      run: dotnet build --no-restore --configuration Release
    
    - name: Test
      run: dotnet test --no-build --configuration Release --verbosity normal

  docker:
    name: Docker Build
    runs-on: ubuntu-latest
    needs: [frontend, backend]
    if: github.event_name == 'push' && github.ref == 'refs/heads/master'
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Build Docker image
      run: docker build -t cma-dashboard:latest .
    
    - name: Save Docker image
      run: docker save cma-dashboard:latest | gzip > cma-dashboard.tar.gz
    
    - name: Upload artifact
      uses: actions/upload-artifact@v3
      with:
        name: docker-image
        path: cma-dashboard.tar.gz
